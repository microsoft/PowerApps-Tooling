// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

using System.Diagnostics.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp;

namespace Microsoft.PowerPlatform.TypedStrings.Generator;

[TestClass]
public class ExampleGeneratorTests
{
    [TestMethod]
    public void DebuggingSourceGeneratorTest()
    {
        // This is not a "test" per se, but rather a way to programmatically execute the source generator,
        // so that breakpoints set in it can be executed.

        var generator = Activator.CreateInstance<ExampleSourceGenerator>();

        CSharpGeneratorDriver
            .Create(generator)
            .RunGenerators(
                CSharpCompilation.Create("test", syntaxTrees: [
                    CSharpSyntaxTree.ParseText("""
                        namespace foo.bar
                        {
                            [Microsoft.PowerPlatform.TypedStrings.Generator.TypedString]
                            public partial record TypedStringTest;
                        }
                        """),
                ]));

    }
}

[TypedString]
public partial record TypedStringTestDefaultIsValid
{
    // Work In Progress - attempting to declare the implementation here, with a partial method on the autogenerated side to reference it.
    // public static partial bool IsValid([NotNullWhen(true)] string? value) => !string.IsNullOrEmpty(value);
}


[TypedString]
public partial record TypedStringTestCustomIsValid
{
    // Work In Progress - attempting to declare the implementation here, with a partial method on the autogenerated side to reference it.
    public static bool IsValid([NotNullWhen(true)] string? value) => !string.IsNullOrEmpty(value);
}
