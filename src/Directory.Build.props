<Project>
    <Import Project="Versions.props" />

    <PropertyGroup>
        <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
        <TargetFramework>$(TargetFrameworkVersion)</TargetFramework>
        <GenerateDocumentationFile>True</GenerateDocumentationFile>
        <NoWarn>1591</NoWarn>
        <ChecksumAlgorithm>SHA256</ChecksumAlgorithm>
    </PropertyGroup>

    <PropertyGroup Label="Code Analysis config">
        <!-- Without this, some code styling rules only execute in VS IDE, sometimes, only when the file is open -->
        <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
        <EnableNETAnalyzers>true</EnableNETAnalyzers>
        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
        <CodeAnalysisTreatWarningsAsErrors>true</CodeAnalysisTreatWarningsAsErrors>
    </PropertyGroup>

    <!--
    When building in VS IDE, we don't want to treat warnings as errors, because they randomize developer progress.
    Warnings will be treated as errors at command line and in build pipelines
    -->
    <PropertyGroup Label="Code Analysis config for VS IDE"
                   Condition="'$(BuildingInsideVisualStudio)' == 'true'">
        <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
        <CodeAnalysisTreatWarningsAsErrors>false</CodeAnalysisTreatWarningsAsErrors>
    </PropertyGroup>

    <ItemGroup>
        <Compile Include="..\..\.version\PipelineAssemblyInfo.cs">
            <Link>Properties\PipelineAssemblyInfo.cs</Link>
        </Compile>
    </ItemGroup>

    <ItemGroup Label="Global usings">
        <Using Include="System" />
        <Using Include="System.Collections.Generic" />
        <Using Include="System.Diagnostics" />
    </ItemGroup>

    <!-- If not otherwise specified, the project is building for Debug -->
    <PropertyGroup Condition=" '$(Configuration)' == '' ">
        <Configuration>Debug</Configuration>
    </PropertyGroup>

    <!-- Settings for the Debug configuration. -->
    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
        <DebugSymbols>true</DebugSymbols>
        <DebugType>full</DebugType>
        <DefineConstants>TRACE;DEBUG</DefineConstants>
    </PropertyGroup>

    <!-- Settings for the Release configuration. -->
    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
        <DebugType>pdbonly</DebugType>
        <Optimize>true</Optimize>
        <DefineConstants>TRACE</DefineConstants>
    </PropertyGroup>

    <PropertyGroup>
        <SourcePath>$(MSBuildThisFileDirectory)</SourcePath>
        <BinPath Condition=" '$(BinPath)' == '' ">$([System.IO.Path]::GetFullPath('$(SourcePath)..\bin'))</BinPath>
        <IntermediatePath Condition=" '$(IntermediatePath)' == '' ">$([System.IO.Path]::GetFullPath('$(SourcePath)..\obj'))\</IntermediatePath>
        <RelativeProjectPath>$([MSBuild]::MakeRelative($(SourcePath), $(MSBuildProjectDirectory)))</RelativeProjectPath>

        <RootOutputPath>$(BinPath)\$(Configuration)\</RootOutputPath>

        <!-- Output path for the project -->
        <ProjectOutputPath>$(RootOutputPath)$(RelativeProjectPath)\</ProjectOutputPath>

        <!-- Output path for the project -->
        <OutputPath Condition="'$(OutputPath)' == ''">$(ProjectOutputPath)</OutputPath>
        <OutDir Condition="'$(OutDir)' == ''">$(OutputPath)</OutDir>

        <!-- Intermediates path for the configuration/platform combination. -->
        <RootIntermediateOutputPath>$(IntermediatePath)$(Configuration)\</RootIntermediateOutputPath>

        <!-- Intermediates path for the project. -->
        <ProjectIntermediateOutputPath>$(RootIntermediateOutputPath)$(RelativeProjectPath)\</ProjectIntermediateOutputPath>
        <IntermediateOutputPath Condition="'$(IntermediateOutputPath)' == ''">$(ProjectIntermediateOutputPath)</IntermediateOutputPath>
        <BaseIntermediateOutputPath Condition="'$(BaseIntermediateOutputPath)' == ''">$(IntermediatePath)NugetRestore\$(RelativeProjectPath)</BaseIntermediateOutputPath>

        <!-- Path to Nuget packages -->
        <PackagesPath Condition=" '$(PackagesPath)' == '' ">$([System.IO.Path]::GetFullPath('$(SourcePath)..\pkg'))\</PackagesPath>
    </PropertyGroup>

    <PropertyGroup>
        <RestorePackagesPath>$(PackagesPath)</RestorePackagesPath>
        <RestoreIgnoreFailedSource>true</RestoreIgnoreFailedSource>
        <RestoreOutputPath>$(BaseIntermediateOutputPath)</RestoreOutputPath>
    </PropertyGroup>
</Project>
