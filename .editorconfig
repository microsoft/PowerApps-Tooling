# see https://aka.ms/editorconfigdocs
root = true

[*]
indent_style = space
insert_final_newline = true
charset = utf-8
trim_trailing_whitespace = false

[*.{md,markdown}]
tab_width = 2
indent_size = 2
trim_trailing_whitespace = false # trailing whitespace is significant in markdown

[*.{json,js}]
tab_width = 2
indent_size = 2
trim_trailing_whitespace = true

[*.{yaml,yml}]
tab_width = 2
indent_size = 2
trim_trailing_whitespace = false # Yaml scalars may contain data that end with trailing whitespace

# Code files
[*.{cs,vb}]
tab_width = 4
indent_size = 4
end_of_line = crlf
trim_trailing_whitespace = true

# **********************************
# ** .Net Code style & formatting **
# **********************************
[*.{cs,vb}]
file_header_template = Copyright (c) Microsoft Corporation.\nLicensed under the MIT License.

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

# Naming styles

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

# Organize usings
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

# Styles
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_qualification_for_field = false:error
dotnet_style_qualification_for_property = false:error
dotnet_style_qualification_for_method = false:error
dotnet_style_qualification_for_event = false:error
dotnet_style_object_initializer = true:suggestion
dotnet_style_prefer_collection_expression = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_namespace_match_folder = true:suggestion
dotnet_style_readonly_field = true:suggestion
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent
dotnet_style_allow_statement_immediately_after_block_experimental = true:silent
dotnet_style_allow_multiple_blank_lines_experimental = true:silent
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent

dotnet_code_quality_unused_parameters = all:suggestion

# ***************
# ** C# styles **
# ***************
[*.cs]
csharp_indent_labels = one_less_than_current
csharp_using_directive_placement = outside_namespace:error
csharp_prefer_simple_using_statement = true:suggestion
csharp_prefer_braces = true:silent
csharp_style_namespace_declarations = file_scoped:error
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_prefer_primary_constructors = true:suggestion
csharp_style_expression_bodied_methods = false:error
csharp_style_expression_bodied_constructors = false:error
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_var_elsewhere = true:warning
csharp_style_var_when_type_is_apparent = true:error
csharp_style_var_for_built_in_types = true:error
csharp_space_around_binary_operators = before_and_after
csharp_style_throw_expression = true:suggestion
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent
csharp_prefer_static_local_function = true:suggestion
csharp_style_prefer_readonly_struct = true:suggestion
csharp_style_prefer_readonly_struct_member = true:suggestion
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true:silent
csharp_style_allow_embedded_statements_on_same_line_experimental = true:silent
csharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = true:silent
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:silent
csharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = true:silent
csharp_style_conditional_delegate_call = true:suggestion
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_prefer_pattern_matching = true:silent
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion
csharp_style_prefer_extended_property_pattern = true:suggestion


# NOTE: We put code analysis rule configurations after setting up styles.

# *******************************************
# ** Set Diagnostic Rule Category Defaults **
# *******************************************
# Any rule set to 'warning' will be turned into an 'error' during any official/PR build.
# In local builds, this is preferable as it allows development to be faster while code is being written.
# This is why the default severity is usually warning here.
# Set severity to 'error' when the fix indicates a breaking change or using insecure/unsafe APIs/patterns.
[*.{cs,vb}]

dotnet_analyzer_diagnostic.category-Design.severity           = warning
dotnet_analyzer_diagnostic.category-Documentation.severity    = warning
dotnet_analyzer_diagnostic.category-Globalization.severity    = warning
dotnet_analyzer_diagnostic.category-Interoperability.severity = warning
dotnet_analyzer_diagnostic.category-Maintainability.severity  = warning
dotnet_analyzer_diagnostic.category-Naming.severity           = warning
dotnet_analyzer_diagnostic.category-Performance.severity      = warning
dotnet_analyzer_diagnostic.category-Reliability.severity      = warning
dotnet_analyzer_diagnostic.category-Security.severity         = error
dotnet_analyzer_diagnostic.category-Style.severity            = warning
dotnet_analyzer_diagnostic.category-Usage.severity            = warning

# *********************************
# ** Code-style Diagnostic Rules **
# *********************************
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/
# These all have the 'IDE' prefix
[*.{cs,vb}]

dotnet_diagnostic.IDE0003.severity = error      # this and Me preferences
dotnet_diagnostic.IDE0007.severity = error      # Use 'var' instead of explicit type
dotnet_diagnostic.IDE0005.severity = warning    # Remove unnecessary using directives
dotnet_diagnostic.IDE0010.severity = none       # Add missing cases to switch statement
dotnet_diagnostic.IDE0011.severity = none       # Add braces
dotnet_diagnostic.IDE0018.severity = suggestion # Inline variable declaration (net8.0 doesn't respect the severity set for csharp_style_inlined_variable_declaration)
dotnet_diagnostic.IDE0028.severity = none       # Use collection initializers or expressions
dotnet_diagnostic.IDE0042.severity = none       # Deconstruct variable declaration
dotnet_diagnostic.IDE0043.severity = warning    # Format string contains invalid placeholder
dotnet_diagnostic.IDE0045.severity = none       # Use conditional expression for assignment
dotnet_diagnostic.IDE0046.severity = none       # Use conditional expression for return
dotnet_diagnostic.IDE0051.severity = warning    # Remove unused private member
dotnet_diagnostic.IDE0052.severity = warning    # Remove unread private member
dotnet_diagnostic.IDE0055.severity = warning    # Formatting rule ("Fix formatting") - All formatting options use this rule. e.g. spacing, indentation, new lines, etc.
dotnet_diagnostic.IDE0057.severity = none       # Use range operator
dotnet_diagnostic.IDE0058.severity = none       # Remove unnecessary expression value
dotnet_diagnostic.IDE0060.severity = none       # Remove unused parameter
dotnet_diagnostic.IDE0061.severity = none       # Use expression body for local functions
dotnet_diagnostic.IDE0063.severity = none       # Use simple 'using' statement
dotnet_diagnostic.IDE0066.severity = none       # Use switch expression
dotnet_diagnostic.IDE0064.severity = warning    # Make struct fields writable
dotnet_diagnostic.IDE0070.severity = none       # Use 'System.HashCode.Combine'
dotnet_diagnostic.IDE0073.severity = error      # Require file header
dotnet_diagnostic.IDE0078.severity = none       # Use pattern matching
dotnet_diagnostic.IDE0090.severity = warning    # expression can be simplified
dotnet_diagnostic.IDE0130.severity = none       # Namespace does not match folder structure
dotnet_diagnostic.IDE0161.severity = error      # Namespace declaration preferences
dotnet_diagnostic.IDE0210.severity = none       # Convert to top-level statements
dotnet_diagnostic.IDE0290.severity = suggestion # Use primary constructor
dotnet_diagnostic.IDE0300.severity = suggestion # Use collection expression for array
dotnet_diagnostic.IDE0301.severity = suggestion # Use collection expression for empty
dotnet_diagnostic.IDE0305.severity = suggestion # Use collection expression for fluent
dotnet_diagnostic.IDE1006.severity = none       # These words must begin with upper case characters


# ***********************************
# ** Code Quality Diagnostic Rules **
# ***********************************
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/?view=vs-2022
[*.{cs,vb}]

dotnet_diagnostic.CA1031.severity = error      # Do not catch general exception types
dotnet_diagnostic.CA1063.severity = error      # Implement IDisposable correctly
dotnet_diagnostic.CA1001.severity = error      # Types that own disposable fields should be disposable
dotnet_diagnostic.CA1507.severity = error      # Use nameof in place of string
dotnet_diagnostic.CS1573.severity = silent     # Parameter has no matching param tag in the XML comment (but other parameters do). Justification: Don't require unneccessary comments. Only add comments for parameters that need clairification.
dotnet_diagnostic.CA1508.severity = warning    # Avoid dead conditional code
dotnet_diagnostic.CA1700.severity = error      # Do not name enum values 'Reserved'
dotnet_diagnostic.CA1707.severity = warning    # Identifiers should not contain underscores
dotnet_diagnostic.CA1708.severity = error      # Identifiers should differ by more than case
dotnet_diagnostic.CA1710.severity = error      # Identifiers should have correct suffix
dotnet_diagnostic.CA1712.severity = error      # Do not prefix enum values with type name
dotnet_diagnostic.CA1720.severity = error      # Identifiers should not contain type names
dotnet_diagnostic.CA1802.severity = error      # Use Literals Where Appropriate
dotnet_diagnostic.CA1805.severity = warning    # Do not initialize unnecessarily
dotnet_diagnostic.CA1810.severity = error      # Initialize reference type static fields inline
dotnet_diagnostic.CA1816.severity = error      # Call GC.SuppressFinalize correctly
dotnet_diagnostic.CA1821.severity = error      # Remove empty finalizers
dotnet_diagnostic.CA1822.severity = warning    # Mark members as static
dotnet_diagnostic.CA1823.severity = warning    # Avoid unused private fields
dotnet_diagnostic.CA1826.severity = warning    # Use property instead of Linq Enumerable method
dotnet_diagnostic.CA1827.severity = warning    # Do not use Count()/LongCount() when Any() can be used
dotnet_diagnostic.CA1849.severity = warning    # Call async methods when in an async method
dotnet_diagnostic.CA2000.severity = error      # Dispose objects before losing scope
dotnet_diagnostic.CA2213.severity = error      # Disposable fields should be disposed
dotnet_diagnostic.CA2215.severity = error      # Dispose methods should call base class dispose
dotnet_diagnostic.CA2216.severity = warning    # Disposable types should declare finalizer


# *****************************************
# ** Style Cop Analyzer Diagnostic Rules **
# *****************************************
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/DOCUMENTATION.md
# Note: The VS IDE generates these by placing the rule type name on the previous line, instead of on the same line.
[*.{cs,vb}]

dotnet_diagnostic.SA0002.severity = error

dotnet_diagnostic.SA1000.severity = error

dotnet_diagnostic.SA1001.severity = error

dotnet_diagnostic.SA1002.severity = error

dotnet_diagnostic.SA1003.severity = error

dotnet_diagnostic.SA1004.severity = error

# SingleLineCommentsMustBeginWithSingleSpace
dotnet_diagnostic.SA1005.severity = warning

dotnet_diagnostic.SA1006.severity = error

dotnet_diagnostic.SA1007.severity = error

dotnet_diagnostic.SA1008.severity = error

dotnet_diagnostic.SA1009.severity = error

dotnet_diagnostic.SA1010.severity = error

dotnet_diagnostic.SA1100.severity = error

dotnet_diagnostic.SA1102.severity = error

dotnet_diagnostic.SA1103.severity = error

dotnet_diagnostic.SA1104.severity = error

dotnet_diagnostic.SA1105.severity = error

dotnet_diagnostic.SA1107.severity = error

# OpeningParenthesisMustBeOnDeclarationLine
dotnet_diagnostic.SA1110.severity = error

# ClosingParenthesisMustBeOnLineOfLastParameter
dotnet_diagnostic.SA1111.severity = error

# ClosingParenthesisMustBeOnLineOfOpeningParenthesis
dotnet_diagnostic.SA1112.severity = error

# CommaMustBeOnSameLineAsPreviousParameter
dotnet_diagnostic.SA1113.severity = error

# ParameterListMustFollowDeclaration
dotnet_diagnostic.SA1114.severity = error

# ParameterMustFollowComma
dotnet_diagnostic.SA1115.severity = error

# SplitParametersMustStartOnLineAfterDeclaration
dotnet_diagnostic.SA1116.severity = error

# ParametersMustBeOnSameLineOrSeparateLines
dotnet_diagnostic.SA1117.severity = error

# GenericTypeConstraintsMustBeOnOwnLine
dotnet_diagnostic.SA1120.severity = error

# DoNotPlaceRegionsWithinElements
dotnet_diagnostic.SA1123.severity = error

# UseShorthandForNullableTypes
dotnet_diagnostic.SA1125.severity = error

# GenericTypeConstraintsMustBeOnOwnLine
dotnet_diagnostic.SA1127.severity = error

# ConstructorInitializerMustBeOnOwnLine
dotnet_diagnostic.SA1128.severity = error

# DoNotUseDefaultValueTypeConstructor
dotnet_diagnostic.SA1129.severity = error

# UseLambdaSyntax
dotnet_diagnostic.SA1130.severity = error

# UseReadableConditions
dotnet_diagnostic.SA1131.severity = error

# DoNotCombineFields
dotnet_diagnostic.SA1132.severity = error

# DoNotCombineAttributes
dotnet_diagnostic.SA1133.severity = error

# AttributesMustNotShareLine
dotnet_diagnostic.SA1134.severity = error

# UsingDirectivesMustBeQualified
dotnet_diagnostic.SA1135.severity = error

# EnumValuesShouldBeOnSeparateLines
dotnet_diagnostic.SA1136.severity = error

# UseLiteralsSuffixNotationInsteadOfCasting
dotnet_diagnostic.SA1139.severity = error

# InterfaceNamesMustBeginWithI
dotnet_diagnostic.SA1302.severity = error

# VariableNamesMustNotBePrefixed
dotnet_diagnostic.SA1308.severity = error

# ParameterNamesMustBeginWithLowerCaseLetter
dotnet_diagnostic.SA1313.severity = error

# End XM Documentation Warnings
# File/Class Naming Guidelines: These conflict with our function files mostly
dotnet_diagnostic.SA1402.severity = none

# SYSLIB1045: Convert to 'GeneratedRegexAttribute'.
dotnet_diagnostic.SYSLIB1045.severity = none # Seems to be an IDE only rule atm

dotnet_diagnostic.SX1309.severity = none


# ********************************
# ** Additional unordered rules **
# ********************************
# While may be empty, ensures that VS IDE can add additional rules after our categorized ones above.
[*.{cs,vb}]
